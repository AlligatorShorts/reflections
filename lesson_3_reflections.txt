When would you want to use a remote repository rather than keeping all your work local?
    a remote repository would act as good backup in case of local corruption of files. it also allows you (and others) to work on the
    project without geographical hinderance. Finally it centralises all your work.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository? 
    there are a number of reasons why changes could be on GitHub that are ot useful to you. One, they could be put there accidentally 
    (human error). Two, you might not being working on an up-to-date part of the program, or off in a branch. Three, the new updates 
    might clash or hinder parts you've been working, and slow you down. 

Describe the differences between forks, clones, and branches. When would you use one instead of the other?
    Forks are usually someone else's work, which you like/want/need but will modify. However, in 1) an efford to credit them and 2)
    with their knowledge that you are usuing their work, you can fork the work. this works oly via github. Clones are just copying a
    repository, and can be done within computer (i.e. changing file location) and computer to computer. This allows you to have an exact
    copy of the clone. Branches are seperations of the same work. They could be called 'alternative commits', in which changes are made
    independant of the master (branch) and create a different program.
  
What is the benefit of having a copy of the last known state of the remote stored locally?
    this could minimise de-syncing errors so that you dont huge gaps of time between knowing the last known state of the remote. it also
    allows a merge to take place locally and be decided on by the inidividual before being pushed to the remote and affecting all
    collabarators. 

How would you collaborate without using Git or Github? What would be easier, and what would be harder?
    This a hard question to answer without selecting another collaboration method todirectly compare it with, as those all have their
    pros and cons too. Github works well and has clear communication tools. It isnt without its faults and is likely not the best system
    for communication - a messaging app is quicker and more to the point. But it allows your siginificant control over your projects. 
    There are also several things unique to github which are powerful - forking, pull requests, etc (other systems will have alternatives
    but these work well). 
 

    
