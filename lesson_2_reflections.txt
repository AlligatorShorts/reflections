What happens when you initalize a repository? Why do you need to do it?
    You create a hidden .git file, which doesnt interact with users to track the status of other files in the directories. You need to it
    so that you can start tracking commits, i.e. saved states, of the thing you are working on.

How is the staging area different from the working directory and the repository? What value do you think it offers?
    It is the inbetween area. the staging area is a pre-requisite for a file being saved in a commit. Practically, files are no different
    having been added or not. It offers the benefit of clarity, and only updating the files you need. Perhaps some files are completely
    finished and do not need to be touched. 

How can you use the staging area to make sure you have one commit per logical change?
    the staging area is an area easily seen with which you can check exactly what you are going to commit, and then decide if it is only
    one logical change. this makes things very clear for human users.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
    Branches allow you to make independant changes seperately of each other which could be useful when making two seperate but both
    questionable changes, or when making a version that services something else etc etc. 

How do the diagrams help you visualise the branch structure? 
    The diagrams help you see the structure of branches better than words ever could. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
    The result, if it goes well, is that you have a working branch tip which has two parents and successfully adds the productive changes
    from both branches to it. It is represented like this because it is an intertwining of branches.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?
    The automatic merge is rather simple and will often require manual oversight, especially if there are simultaneous changes. 
    however it can save you aot of time, especially with small and logical changes which just need to be added, for example when 
    merging master into a side-branch.

